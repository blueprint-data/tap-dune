name: Release & Publish

on:
  push:
    branches: [ 'release' ]

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Python Semantic Release
      uses: python-semantic-release/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.8"
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.5.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
      
    - name: Build package
      run: poetry build
      
    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: poetry publish